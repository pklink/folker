plugins {
    id("io.micronaut.application") version "4.5.0"
    id("com.gradleup.shadow") version "8.3.6"
    id("io.micronaut.aot") version "4.5.0"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor("io.micronaut:micronaut-http-validation")


    // Rx
    implementation("io.smallrye.reactive:mutiny:2.4.0")
    implementation("io.micronaut.rxjava3:micronaut-rxjava3")

    implementation("io.micronaut:micronaut-context")
    implementation("io.micronaut.validation:micronaut-validation")

    implementation("org.jmolecules:jmolecules-ddd:1.10.0")
    implementation("org.jmolecules:jmolecules-layered-architecture:1.10.0")

    // json serialization
    annotationProcessor("io.micronaut.serde:micronaut-serde-processor")
    implementation("io.micronaut.serde:micronaut-serde-bson")

    // spring modulith
    implementation(platform("org.springframework.modulith:spring-modulith-bom:1.3.4"))
    implementation("org.springframework.modulith:spring-modulith-core")
    testImplementation("org.springframework.modulith:spring-modulith-test")
    testImplementation("org.springframework.modulith:spring-modulith-docs")

    // mongo
    annotationProcessor("io.micronaut.data:micronaut-data-document-processor")
    implementation("io.micronaut.data:micronaut-data-mongodb")
    implementation("io.micronaut.mongodb:micronaut-mongo-sync")

    // to use yaml configuration
    runtimeOnly("org.yaml:snakeyaml")

    compileOnly("io.micronaut:micronaut-http-client")
    runtimeOnly("ch.qos.logback:logback-classic")
    testImplementation("io.micronaut:micronaut-http-client")
    testImplementation("org.mockito:mockito-core:5.8.0")
    testImplementation("org.mockito:mockito-junit-jupiter:5.8.0")
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.10.1")

}


application {
    mainClass = "com.example.Application"
}
java {
    sourceCompatibility = JavaVersion.toVersion("21")
    targetCompatibility = JavaVersion.toVersion("21")
}


graalvmNative.toolchainDetection = false

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
    aot {
        // Please review carefully the optimizations enabled below
        // Check https://micronaut-projects.github.io/micronaut-aot/latest/guide/ for more details
        optimizeServiceLoading = false
        convertYamlToJava = false
        precomputeOperations = true
        cacheEnvironment = true
        optimizeClassLoading = true
        deduceEnvironment = true
        optimizeNetty = true
        replaceLogbackXml = true
    }
}


tasks.named("dockerfileNative") {
    jdkVersion = "21"
}


